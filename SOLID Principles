SOLID -->  https://www.youtube.com/watch?v=_jDNAf3CzeY&t=247s
Single Responsiblity --> Each class should have only one sole purpose and not to be filled with excessive functionality.
Open Closed --> Classes should be open for extension , closed for modification . In other words you should not rewrite the existing class for implementing new feature
Liskov Substitution --> This means that every subclass or derived class should be subtituable for there base or parent class. 
Interface Segregation --> Interfaces should not force classes to implement what they cant do . Large interfaces should be divided into small ones.
Dependency Inversion  --> Components should depend on abstractions, not on concretions.
